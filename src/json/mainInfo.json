{
    "title": "GhostShell: Streaming LLM Function Calls for Concurrent Embodied Programming",
    "mainGif": "./videos/demo2.webm", 
    "authorList":[
        {
            "name": "Jian Gong",
            "url": "xxx"
        },
        {
            "name": "Youwei Huang",
            "url": "xxx"
        },
        {
            "name": "Bo Yuan",
            "url": "xxx"
        },
        {
            "name": "Ming Zhu",
            "url": "xxx"
        },
        {
            "name": "Juncheng Zhan",
            "url": "xxx"
        },
        {
            "name": "Jinke Wang",
            "url": "xxx"
        },
        {
            "name": "Hang Shu",
            "url": "xxx"
        },
        {
            "name": "Mingyue Xiong",
            "url": "xxx"
        },
        {
            "name": "Yanjun Ye",
            "url": "xxx"
        },
        {
            "name": "Yufan Zu",
            "url": "xxx"
        },
        {
            "name": "Yang Zhou",
            "url": "xxx"
        },
        {
            "name": "Yihan Ding",
            "url": "xxx"
        },
        {
            "name": "Xuannian Chen",
            "url": "xxx"
        },
        {
            "name": "Xingyu Lu",
            "url": "xxx"
        },
        {
            "name": "Runjie Ban",
            "url": "xxx"
        },
        {
            "name": "Bingchao Huang",
            "url": "xxx"
        },
        {
            "name": "Fusen Liu",
            "url": "xxx"
        }
    ],
    "linkList":[
        {
            "name": "Paper",
            "img": "./img/paper_small.png",
            "url": "https://arxiv.org/abs/2508.05298"
        },
        {
            "name": "Code",
            "img": "./img/github.png",
            "url": "https://github.com/Coco-Robot/GhostShell"
        }
    ],
    "abstract": "We present GhostShell, a novel approach that leverages Large Language Models(LLMs) to enable streaming and concurrent behavioral programming for embodied systems. In contrast to conventional methods that rely on pre-scheduled action sequences or behavior trees, GhostShell drives embodied systems to act on-the-fly by issuing function calls incrementally as tokens are streamed from the LLM. GhostShell features a streaming XML function token parser, a dynamic function interface mapper, and a multi-channel scheduler that orchestrates intra-channel synchronous and inter-channel asynchronous function calls, thereby coordinating serial-parallel embodied actions across multiple robotic components as directed by the LLM. We evaluate GhostShell on our robot prototype COCO through comprehensive grounded experiments across 34 real-world interaction tasks and multiple LLMs. The results demonstrate that our approach achieves state-of-the-art Behavioral Correctness Metric of 0.85 with Claude-4-Sonnet and up to 66Ã— faster response times compared to LLM native function calling APIs. GhostShell also proves effective in long-horizon multimodal tasks, demonstrating strong robustness and generalization.",
    "mainImg": "./img/demo.png",
    "mainVideo": "./videos/demo.mp4",
    "ExperimentText1":"Below are some demonstration videos of experiments. The videos not only include actions, but also the voice and expressions of the robot.",
    "ExperimentText2":"We also place the XML commands generated by LLM at the bottom of the video. The robot completes tasks by executing these XML statements.",
    "paperUrl":"https://arxiv.org/abs/2508.05298",
    "citationContent":"@misc{gong2025ghostshellstreamingllmfunction,<br> title={GhostShell: Streaming LLM Function Calls for Concurrent Embodied Programming},<br> author={Jian Gong and Youwei Huang and Bo Yuan and Ming Zhu and Juncheng Zhan and Jinke Wang and Hang Shu and Mingyue Xiong and Yanjun Ye and Yufan Zu and Yang Zhou and Yihan Ding and Xuannian Chen and Xingyu Lu and Runjie Ban and Bingchao Huang and Fusen Liu},<br> year={2025},<br> eprint={2508.05298},<br> archivePrefix={arXiv},<br> primaryClass={cs.RO},<br> url={https://arxiv.org/abs/2508.05298},<br> }",
    "acknowledgementsContent": ""
}
